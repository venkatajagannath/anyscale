# coding: utf-8

"""
    Anyscale API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import anyscale_client
from anyscale_client.models.aws_node_options import AWSNodeOptions  # noqa: E501
from anyscale_client.rest import ApiException

class TestAWSNodeOptions(unittest.TestCase):
    """AWSNodeOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AWSNodeOptions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = anyscale_client.models.aws_node_options.AWSNodeOptions()  # noqa: E501
        if include_optional :
            return AWSNodeOptions(
                block_device_mappings = [
                    anyscale_client.models.block_device_mapping.BlockDeviceMapping(
                        device_name = '0', 
                        ebs = anyscale_client.models.ebs_block_device.EbsBlockDevice(
                            delete_on_termination = True, 
                            encrypted = True, 
                            iops = 56, 
                            kms_key_id = '0', 
                            outpost_arn = '0', 
                            snapshot_id = '0', 
                            throughput = 56, 
                            volume_size = 56, 
                            volume_type = '0', ), 
                        no_device = '0', 
                        virtual_name = '0', )
                    ], 
                iam_instance_profile = anyscale_client.models.iam_instance_profile_specification.IamInstanceProfileSpecification(
                    arn = '0', 
                    name = '0', ), 
                security_group_ids = [
                    '0'
                    ], 
                subnet_id = '0', 
                tag_specifications = [
                    anyscale_client.models.aws_tag_specification.AWSTagSpecification(
                        resource_type = '0', 
                        tags = [
                            anyscale_client.models.aws_tag.AWSTag(
                                key = '0', 
                                value = '0', )
                            ], )
                    ], 
                network_interfaces = [
                    anyscale_client.models.network_interface.NetworkInterface(
                        subnet_id = '0', 
                        groups = [
                            '0'
                            ], 
                        associate_public_ip_address = True, )
                    ], 
                placement = None, 
                launch_template = None
            )
        else :
            return AWSNodeOptions(
        )

    def testAWSNodeOptions(self):
        """Test AWSNodeOptions"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
