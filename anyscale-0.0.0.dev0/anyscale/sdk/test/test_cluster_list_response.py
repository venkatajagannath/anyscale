# coding: utf-8

"""
    Anyscale API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import anyscale_client
from anyscale_client.models.cluster_list_response import ClusterListResponse  # noqa: E501
from anyscale_client.rest import ApiException

class TestClusterListResponse(unittest.TestCase):
    """ClusterListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ClusterListResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = anyscale_client.models.cluster_list_response.ClusterListResponse()  # noqa: E501
        if include_optional :
            return ClusterListResponse(
                results = [
                    anyscale_client.models.cluster.Cluster(
                        name = '0', 
                        project_id = '0', 
                        cluster_environment_build_id = '0', 
                        cluster_compute_id = '0', 
                        cluster_compute_config = null, 
                        idle_timeout_minutes = 56, 
                        allow_public_internet_traffic = True, 
                        user_service_access = null, 
                        id = '0', 
                        state = null, 
                        goal_state = null, 
                        creator_id = '0', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        access_token = '0', 
                        services_urls = null, 
                        head_node_info = null, 
                        ssh_authorized_keys = [
                            '0'
                            ], 
                        ssh_private_key = '0', 
                        ray_version = '0', 
                        ray_version_last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        user_service_token = '0', )
                    ], 
                metadata = null
            )
        else :
            return ClusterListResponse(
                results = [
                    anyscale_client.models.cluster.Cluster(
                        name = '0', 
                        project_id = '0', 
                        cluster_environment_build_id = '0', 
                        cluster_compute_id = '0', 
                        cluster_compute_config = null, 
                        idle_timeout_minutes = 56, 
                        allow_public_internet_traffic = True, 
                        user_service_access = null, 
                        id = '0', 
                        state = null, 
                        goal_state = null, 
                        creator_id = '0', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        access_token = '0', 
                        services_urls = null, 
                        head_node_info = null, 
                        ssh_authorized_keys = [
                            '0'
                            ], 
                        ssh_private_key = '0', 
                        ray_version = '0', 
                        ray_version_last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        user_service_token = '0', )
                    ],
        )

    def testClusterListResponse(self):
        """Test ClusterListResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
