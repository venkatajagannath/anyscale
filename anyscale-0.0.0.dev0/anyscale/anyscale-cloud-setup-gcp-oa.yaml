resources:
# No VPC/subnet creation for OA
- name: filestore-${CLOUD_ID}
  type: gcp-types/file-v1beta1:projects.locations.instances
  properties:
    instanceId: filestore-${CLOUD_ID}
    parent: projects/${PROJECT_ID}/locations/${REGION}-${ZONE}
    tier: STANDARD
    networks:
      - network: projects/${PROJECT_ID}/global/networks/${VPC_NAME}
    fileShares:
      - name: anyscale_vol
        capacityGb: ${FILESHARE_CAPACITY_GB}
    labels:
      anyscale-cloud-id: ${CLOUD_ID_UNDERSCORE}
- name: storage-bucket-${CLOUD_ID}
  type: storage.v1.bucket
  properties:
    location: ${REGION}
    storageClass: REGIONAL
    iamConfiguration:
      uniformBucketLevelAccess:
        enabled: True
      publicAccessPrevention: enforced
    cors:
    - origin: ["${ANYSCALE_CORS_ORIGIN}"]
      responseHeader: ["*"]
      # Do not depends on PUT,POST,HEAD,DELETE yet because old clouds are not migrated.
      method: ["GET", "PUT", "POST", "HEAD", "DELETE"]
    labels:
      anyscale-cloud-id: ${CLOUD_ID_UNDERSCORE}
- name: ${CLOUD_ID}
  type: iam.v1.serviceAccount
  properties:
    accountId: ${CLOUD_ID}
    displayName: ${CLOUD_ID} Cluster Node Service Account
    projectId: ${PROJECT_ID}
- name: bucket-iam-anyscale-acess-${CLOUD_ID}
  type: gcp-types/storage-v1:virtual.buckets.iamMemberBinding
  properties:
    bucket: $$(ref.storage-bucket-${CLOUD_ID}.name)
    member: serviceAccount:${ANYSCALE_CONTROL_PLANE_SERVICE_ACCOUNT_EMAIL}
    role: roles/storage.admin
  metadata:
    dependsOn:
      - storage-bucket-${CLOUD_ID}
- name: bucket-iam-${CLOUD_ID}
  type: gcp-types/storage-v1:virtual.buckets.iamMemberBinding
  properties:
    bucket: $$(ref.storage-bucket-${CLOUD_ID}.name)
    member: serviceAccount:$$(ref.${CLOUD_ID}.email)
    role: roles/storage.admin
  metadata:
    dependsOn:
      - ${CLOUD_ID}
      - storage-bucket-${CLOUD_ID}
# Add firewall rules for the cloud
- name: allow-interal-${CLOUD_ID}
  type: compute.v1.firewall
  properties:
    direction: INGRESS
    network: projects/${PROJECT_ID}/global/networks/${VPC_NAME}
    allowed:
    - IPProtocol: all
    targetServiceAccounts:
    - $$(ref.${CLOUD_ID}.email)
    sourceServiceAccounts:
    - $$(ref.${CLOUD_ID}.email)
    priority: 2000
  metadata:
    dependsOn:
      - ${CLOUD_ID}
- name: allow-filestore-${CLOUD_ID}
  type: compute.v1.firewall
  properties:
    direction: EGRESS
    network: projects/${PROJECT_ID}/global/networks/${VPC_NAME}
    allowed:
    - IPProtocol: all
    targetServiceAccounts:
    - $$(ref.${CLOUD_ID}.email)
    destinationRanges:
    - $$(ref.filestore-${CLOUD_ID}.networks[0].reservedIpRange)
    priority: 1000
  metadata:
    dependsOn:
      - ${CLOUD_ID}
      - filestore-${CLOUD_ID}
