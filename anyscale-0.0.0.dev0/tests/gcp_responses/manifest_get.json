{
    "expandedConfig": "resources:\n- name: vpc-cld-congtest\n  properties:\n    autoCreateSubnetworks: false\n    name: vpc-cld-congtest\n  type: compute.v1.network\n- name: subnet-cld-congtest\n  properties:\n    ipCidrRange: 10.0.0.0/20\n    name: subnet-cld-congtest\n    network: $(ref.vpc-cld-congtest.selfLink)\n    region: us-west1\n  type: compute.v1.subnetwork\n  metadata:\n    dependsOn:\n    - vpc-cld-congtest\n- name: firewall-policy-cld-congtest\n  properties:\n    description: firewall policy for Anyscale managed cloud cld-congtest\n    name: firewall-policy-cld-congtest\n    parentId: projects/mock-project/regions/us-west1\n  type: gcp-types/compute-v1:networkFirewallPolicies\n- name: filestore-cld-congtest\n  properties:\n    fileShares:\n    - capacityGb: 1024\n      name: anyscale_fileshare\n    instanceId: filestore-cld-congtest\n    networks:\n    - network: projects/mock-project/global/networks/$(ref.vpc-cld-congtest.name)\n    parent: projects/mock-project/locations/us-west1\n    tier: ENTERPRISE\n  type: gcp-types/file-v1beta1:projects.locations.instances\n  metadata:\n    dependsOn:\n    - vpc-cld-congtest\n- name: storage-bucket-cld-congtest\n  properties:\n    cors:\n    - method:\n      - GET\n      origin:\n      - https://console.anyscale-staging.com\n      responseHeader:\n      - '*'\n    iamConfiguration:\n      publicAccessPrevention: enforced\n      uniformBucketLevelAccess:\n        enabled: true\n    location: us-west1\n    storageClass: REGIONAL\n  type: storage.v1.bucket\n- accessControl:\n    gcpIamPolicy:\n      bindings:\n      - members:\n        - serviceAccount:anyscale-access-cld-congtest@mock-project.iam.gserviceaccount.com\n        role: roles/iam.serviceAccountTokenCreator\n  name: anyscale-access-cld-congtest\n  properties:\n    accountId: anyscale-access-cld-congtest\n    displayName: test anyscale account for managed setup\n    projectId: mock-project\n  type: iam.v1.serviceAccount\n- metadata:\n    dependsOn:\n    - anyscale-access-cld-congtest\n  name: iam-policy-anyscale-access-project-cld-congtest\n  properties:\n    member: serviceAccount:$(ref.anyscale-access-cld-congtest.email)\n    resource: mock-project\n    role: roles/editor\n  type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding\n- name: instance-cld-congtest\n  properties:\n    accountId: instance-cld-congtest\n    displayName: test instance account for managed setup\n    projectId: mock-project\n  type: iam.v1.serviceAccount\n- metadata:\n    dependsOn:\n    - instance-cld-congtest\n  name: iam-policy-instance-project-cld-congtest\n  properties:\n    member: serviceAccount:$(ref.instance-cld-congtest.email)\n    resource: mock-project\n    role: roles/artifactregistry.reader\n  type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding\n- metadata:\n    dependsOn:\n    - anyscale-access-cld-congtest\n    - storage-bucket-cld-congtest\n  name: bucket-iam-anyscale-acess-cld-congtest\n  properties:\n    bucket: $(ref.storage-bucket-cld-congtest.name)\n    member: serviceAccount:$(ref.anyscale-access-cld-congtest.email)\n    role: roles/storage.admin\n  type: gcp-types/storage-v1:virtual.buckets.iamMemberBinding\n- metadata:\n    dependsOn:\n    - instance-cld-congtest\n    - storage-bucket-cld-congtest\n  name: bucket-iam-instance-cld-congtest\n  properties:\n    bucket: $(ref.storage-bucket-cld-congtest.name)\n    member: serviceAccount:$(ref.instance-cld-congtest.email)\n    role: roles/storage.admin\n  type: gcp-types/storage-v1:virtual.buckets.iamMemberBinding\n",
    "id": "6912483376205328560",
    "name": "manifest-1680821855535",
    "insertTime": "2023-04-06T15:57:35.566-07:00",
    "layout": "resources:\n- name: vpc-cld-congtest\n  type: compute.v1.network\n- name: subnet-cld-congtest\n  type: compute.v1.subnetwork\n- name: firewall-policy-cld-congtest\n  type: gcp-types/compute-v1:networkFirewallPolicies\n- name: filestore-cld-congtest\n  type: gcp-types/file-v1beta1:projects.locations.instances\n- name: storage-bucket-cld-congtest\n  type: storage.v1.bucket\n- name: anyscale-access-cld-congtest\n  type: iam.v1.serviceAccount\n- name: iam-policy-anyscale-access-project-cld-congtest\n  type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding\n- name: instance-cld-congtest\n  type: iam.v1.serviceAccount\n- name: iam-policy-instance-project-cld-congtest\n  type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding\n- name: bucket-iam-anyscale-acess-cld-congtest\n  type: gcp-types/storage-v1:virtual.buckets.iamMemberBinding\n- name: bucket-iam-instance-cld-congtest\n  type: gcp-types/storage-v1:virtual.buckets.iamMemberBinding\n",
    "selfLink": "https://www.googleapis.com/deploymentmanager/v2/projects/mock-project/global/deployments/mock-deployment/manifests/manifest-1680821855535",
    "config": {
      "content": "\nresources:\n- name: vpc-cld-congtest\n  type: compute.v1.network\n  properties:\n    name: vpc-cld-congtest\n    autoCreateSubnetworks: False\n- name: subnet-cld-congtest\n  type: compute.v1.subnetwork\n  properties:\n    name: subnet-cld-congtest\n    ipCidrRange: 10.0.0.0/20\n    region: us-west1\n    network: $(ref.vpc-cld-congtest.selfLink)\n- name: firewall-policy-cld-congtest\n  type: gcp-types/compute-v1:networkFirewallPolicies\n  properties:\n    parentId: projects/mock-project/regions/us-west1\n    name: firewall-policy-cld-congtest\n    description: \"firewall policy for Anyscale managed cloud cld-congtest\"\n- name: filestore-cld-congtest\n  type: gcp-types/file-v1beta1:projects.locations.instances\n  properties:\n    instanceId: filestore-cld-congtest\n    parent: projects/mock-project/locations/us-west1\n    tier: ENTERPRISE\n    networks:\n      - network: projects/mock-project/global/networks/$(ref.vpc-cld-congtest.name)\n    fileShares:\n      - name: anyscale_fileshare\n        capacityGb: 1024\n- name: storage-bucket-cld-congtest\n  type: storage.v1.bucket\n  properties:\n    location: us-west1\n    storageClass: REGIONAL\n    iamConfiguration:\n      uniformBucketLevelAccess:\n        enabled: True\n      publicAccessPrevention: enforced\n    cors:\n    - origin: [\"https://console.anyscale-staging.com\"]\n      responseHeader: [\"*\"]\n      method: [\"GET\"]\n- name: anyscale-access-cld-congtest\n  type: iam.v1.serviceAccount\n  properties:\n    accountId: anyscale-access-cld-congtest\n    displayName: test anyscale account for managed setup\n    projectId: mock-project\n  accessControl:\n    gcpIamPolicy:\n        bindings:\n        - role: roles/iam.serviceAccountTokenCreator\n          members:\n          - serviceAccount:anyscale-access-cld-congtest@mock-project.iam.gserviceaccount.com \n- name: iam-policy-anyscale-access-project-cld-congtest\n  type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding\n  metadata:\n    dependsOn:\n      - anyscale-access-cld-congtest\n  properties: \n    resource: mock-project\n    role: roles/editor\n    member: \"serviceAccount:$(ref.anyscale-access-cld-congtest.email)\"\n- name: instance-cld-congtest\n  type: iam.v1.serviceAccount\n  properties:\n    accountId: instance-cld-congtest\n    displayName: test instance account for managed setup\n    projectId: mock-project\n- name: iam-policy-instance-project-cld-congtest\n  type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding\n  metadata:\n    dependsOn:\n      - instance-cld-congtest\n  properties: \n    resource: mock-project\n    role: roles/artifactregistry.reader\n    member: \"serviceAccount:$(ref.instance-cld-congtest.email)\"\n- name: bucket-iam-anyscale-acess-cld-congtest\n  type: gcp-types/storage-v1:virtual.buckets.iamMemberBinding\n  properties:\n    bucket: $(ref.storage-bucket-cld-congtest.name)\n    member: serviceAccount:$(ref.anyscale-access-cld-congtest.email)\n    role: roles/storage.admin\n  metadata:\n    dependsOn:\n      - anyscale-access-cld-congtest\n- name: bucket-iam-instance-cld-congtest\n  type: gcp-types/storage-v1:virtual.buckets.iamMemberBinding\n  properties:\n    bucket: $(ref.storage-bucket-cld-congtest.name)\n    member: serviceAccount:$(ref.instance-cld-congtest.email)\n    role: roles/storage.admin\n  metadata:\n    dependsOn:\n      - instance-cld-congtest\n    "
    },
    "manifestSizeBytes": "4589",
    "manifestSizeLimitBytes": "2097152"
  }
